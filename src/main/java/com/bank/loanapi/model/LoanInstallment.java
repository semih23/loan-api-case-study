package com.bank.loanapi.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;

import java.math.BigDecimal;
import java.time.LocalDate;

@Data // Lombok: Generates @Getter, @Setter, @ToString, @EqualsAndHashCode
@NoArgsConstructor // Lombok: Generates a no-argument constructor
@AllArgsConstructor // Lombok: Generates a constructor with all arguments
@Entity // Marks this class as a JPA entity
@Table(name = "loan_installments") // Maps this entity to the "loan_installments" table in the database
public class LoanInstallment {

    @Id // Marks this field as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Configures the ID to be auto-generated by the database
    private Long id;

    // Many-to-One relationship: Many LoanInstallments belong to one Loan.
    // FetchType.LAZY means the Loan object will not be loaded from the database until it's explicitly accessed.
    // @JoinColumn specifies the foreign key column in the 'loan_installments' table.
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "loan_id") // Foreign key in 'loan_installments' table referencing 'loans' table
    @JsonIgnore // Prevents serialization of the Loan object when LoanInstallment is serialized to JSON (to avoid infinite loops)
    @ToString.Exclude // Prevents infinite loops in toString() due to bidirectional relationship with Loan
    private Loan loan;

    @Column(nullable = false)
    private BigDecimal amount; // The original principal amount of this installment

    private BigDecimal paidAmount; // The actual amount paid for this installment (can differ due to discounts/penalties)

    @Column(nullable = false)
    private LocalDate dueDate; // The date by which this installment should be paid

    private LocalDate paymentDate; // The actual date on which this installment was paid (set when payment occurs)

    @Column(nullable = false)
    private boolean isPaid = false; // Flag indicating if this installment has been paid (defaults to false)
}
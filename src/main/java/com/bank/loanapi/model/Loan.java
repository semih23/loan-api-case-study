package com.bank.loanapi.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

@Data // Lombok: Generates @Getter, @Setter, @ToString, @EqualsAndHashCode
@NoArgsConstructor // Lombok: Generates a no-argument constructor
@AllArgsConstructor // Lombok: Generates a constructor with all arguments
@Entity // Marks this class as a JPA entity
@Table(name = "loans") // Maps this entity to the "loans" table in the database
public class Loan {

    @Id // Marks this field as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Configures the ID to be auto-generated by the database
    private Long id;

    // Many-to-One relationship: Many Loans can belong to one Customer.
    // FetchType.LAZY means the Customer object will not be loaded from the database until it's explicitly accessed.
    // @JoinColumn specifies the foreign key column in the 'loans' table.
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "customer_id") // Foreign key in the 'loans' table referencing 'customers' table
    @JsonIgnore // Prevents serialization of the Customer object when Loan is serialized to JSON (to avoid infinite loops if Customer also references Loans)
    @ToString.Exclude // Prevents infinite loops in toString() due to bidirectional relationship with Customer
    private Customer customer;

    // One-to-Many relationship: One Loan can have many LoanInstallments.
    // "mappedBy = loan" indicates that the 'loan' field in the LoanInstallment entity is the owner of this relationship.
    // CascadeType.ALL means operations (persist, merge, remove, etc.) on Loan will cascade to associated LoanInstallments.
    // orphanRemoval = true means that if a LoanInstallment is removed from this list, it will also be deleted from the database.
    @OneToMany(mappedBy = "loan", cascade = CascadeType.ALL, orphanRemoval = true)
    @ToString.Exclude // Prevents infinite loops in toString() due to bidirectional relationship with LoanInstallment
    private List<LoanInstallment> installments = new ArrayList<>();

    @Column(nullable = false)
    private BigDecimal loanAmount; // The principal amount of the loan

    @Column(nullable = false)
    private int numberOfInstallment; // The total number of installments for the loan

    @Column(nullable = false)
    private LocalDate createDate; // The date when the loan was created

    @Column(nullable = false)
    private boolean isPaid = false; // Flag indicating if the loan has been fully paid (defaults to false)
}
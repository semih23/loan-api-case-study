package com.bank.loanapi.model;

import jakarta.persistence.*;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import lombok.ToString; // Added for @ToString.Exclude

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

@Data // Lombok: Generates @Getter, @Setter, @ToString, @EqualsAndHashCode
@NoArgsConstructor // Lombok: Generates a no-argument constructor
@AllArgsConstructor // Lombok: Generates a constructor with all arguments
@Entity // Marks this class as a JPA entity
@Table(name = "customers") // Maps this entity to the "customers" table in the database
public class Customer {

    @Id // Marks this field as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Configures the ID to be auto-generated by the database
    private Long id;

    @Column(nullable = false) // Marks this field as a column that cannot be null
    private String name;

    @Column(nullable = false)
    private String surname;

    @Column(nullable = false)
    private BigDecimal creditLimit;

    @Column(nullable = false)
    private BigDecimal usedCreditLimit;

    // One-to-Many relationship: One Customer can have many Loans.
    // "mappedBy = customer" indicates that the 'customer' field in the Loan entity is the owner of this relationship.
    // CascadeType.ALL means operations (persist, merge, remove, etc.) on Customer will cascade to associated Loans.
    // orphanRemoval = true means that if a Loan is removed from this list, it will also be deleted from the database.
    @OneToMany(mappedBy = "customer", cascade = CascadeType.ALL, orphanRemoval = true)
    @ToString.Exclude // Prevents infinite loops in toString() due to bidirectional relationship
    private List<Loan> loans = new ArrayList<>();

    // One-to-One relationship: One Customer has one User account.
    // CascadeType.ALL ensures that when a Customer is persisted or removed, the associated User is also persisted or removed.
    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "user_id", referencedColumnName = "id") // Creates a 'user_id' foreign key column in the 'customers' table, referencing the 'id' of the 'app_users' table.
    @ToString.Exclude // Prevents infinite loops in toString() due to bidirectional relationship
    private User user;
}